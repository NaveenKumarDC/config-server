version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: configserver-postgres
    environment:
      POSTGRES_USER: config_user
      POSTGRES_PASSWORD: config_pass
      POSTGRES_DB: config_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: configserver-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/config_db
      SPRING_DATASOURCE_USERNAME: config_user
      SPRING_DATASOURCE_PASSWORD: config_pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: configserver-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data: